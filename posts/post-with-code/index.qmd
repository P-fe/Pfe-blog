---
title: "Palmer penguins"
author: "신태선,신인철,신지원 🐧🐧🐧"
date: "2025-03-06"
categories: [news, code, analysis]
image: "image.jpg"
format: html
jupyter: python3
---

This is a post with executable code.


```{python}
import pandas as pd
from palmerpenguins import load_penguins
penguins = load_penguins()
penguins.info()
df=penguins # 편의상 df 변수 사용.
```

```{python}
df
```


```{python}
# 종의 종류
unique_species = df['species'].unique()
print(f"Species의 종류: {unique_species}")
# 종의 개수 
num_species = df['species'].nunique()
print(f"Species의 종류 개수: {num_species}")
```


```{python}
adelie = df[df['species']== 'Adelie']
chinstrap = df[df['species']== 'Chinstrap']
gentoo = df[df['species']== 'Gentoo']
```


```{python}
adelie_island_counts = adelie['island'].value_counts()
adelie_island_counts.name = 'Adelie_island'

chinstrap_island_counts = chinstrap['island'].value_counts()
chinstrap_island_counts.name = 'Chinstrap_island'

gentoo_island_counts = gentoo['island'].value_counts()
gentoo_island_counts.name = 'Gentoo_island'

# 병합
penguins_island_df = pd.concat([adelie_island_counts, chinstrap_island_counts, gentoo_island_counts], axis=1).fillna(0)
penguins_island_df
```

| Gentoo 펭귄 | Chinstrap 펭귄 | Adelie 펭귄 |
|------------------------|-------------------------|------------------------|
| ![Gentoo 펭귄](https://search.pstatic.net/sunny/?src=https%3A%2F%2Fi.namu.wiki%2Fi%2FdrTsfbfFLZ9svOAHZ0f5jXdiGvU6ap6hzdXqwon9NfcGIb-DpS68i91AMNdeZlMQGrkT2e1BJ3YMkOil4ArYuQ.webp&type=sc960_832){width="199"} | ![Chinstrap 펭귄](https://search.pstatic.net/sunny/?src=https%3A%2F%2Fi3.ruliweb.com%2Fimg%2F20%2F01%2F22%2F16fcc4abb051bbf06.jpg&type=sc960_832){width="293"} | ![Adelie 펭귄](https://search.pstatic.net/sunny/?src=https%3A%2F%2Fi.namu.wiki%2Fi%2Fyy9GM91w2J3gcWKiD0AxwmIWWX7lhu9LmF3KGk13rNBu1BTz72Bdu3qu62cf9Xc5sfYzT9G8c3f-8X3eDgGDZA.webp&type=sc960_832) |


```{python}
nan_penguins = penguins['sex'].isna().sum()
female_adelie = penguins.loc[(penguins['species'] == 'Adelie') & (penguins['sex']=="female")].shape[0]
male_adelie = penguins.loc[(penguins['species'] == 'Adelie') & (penguins['sex']=="male")].shape[0]
female_gentoo = penguins.loc[(penguins['species'] == 'Gentoo') & (penguins['sex']=="female")].shape[0]
male_gentoo = penguins.loc[(penguins['species'] == 'Gentoo') & (penguins['sex']=="male")].shape[0]
female_chinstrap = penguins.loc[(penguins['species'] == 'Chinstrap') & (penguins['sex']=="female")].shape[0]
male_chinstrap = penguins.loc[(penguins['species'] == 'Chinstrap') & (penguins['sex']=="male")].shape[0]
```


```{python}
#각 종의 암컷, 수컷의 개체수
print("Adelie 암컷의 수 : ",female_adelie,'Adelie 수컷의 수 : ',male_adelie, 'Gentoo 암컷의 수 : ',female_gentoo,
      'Gentoo 수컷의 수 : ', male_gentoo, 'Chinstrap 암컷의 수 :', female_chinstrap, 'Chinstrap 수컷의 수 : ' ,male_chinstrap
      ,'구별불가 펭귄의 수 : ', nan_penguins)
```

| 이름/성별 | adelie | gentoo | chinstrap |
|-----------|--------|--------|-----------|
| 암컷      | 73     | 58     | 34        |
| 수컷      | 73     | 61     | 34        |


```{python}
#종별 구분짓기 A는 아델리
adelie = penguins.loc[(penguins['species'] == 'Adelie'),['bill_depth_mm']]
gentoo = penguins.loc[(penguins['species'] == 'Gentoo'),['bill_depth_mm']]
chinstrap = penguins.loc[(penguins['species'] == 'Chinstrap'),['bill_depth_mm']]
adelie_d =  adelie.describe()
gentoo_d = gentoo.describe()
chinstrap_d = chinstrap.describe()
```


```{python}
adelie_d.index = ['표본개수', '평균','표준편차','최솟값','25%','50%','75%','최대값']
gentoo_d.index = ['표본개수', '평균','표준편차','최솟값','25%','50%','75%','최대값']
chinstrap_d.index = ['표본개수', '평균','표준편차','최솟값','25%','50%','75%','최대값']
```

```{python}
adelie_d.rename(columns={'bill_depth_mm': '부리깊이'})
```

```{python}
gentoo_d.rename(columns={'bill_depth_mm': '부리깊이'})
```

```{python}
chinstrap_d.rename(columns={'bill_depth_mm': '부리깊이'})
```


```{python}
gentoo = penguins[penguins['species'] == "Gentoo"] # 124개의 데이터
chinstrap = penguins[penguins['species'] == "Chinstrap"]  # 68개의 데이터
adelie = penguins[penguins['species'] == "Adelie"]  # 152개 데이터
```


```{python}
g_flipper_desc = gentoo['flipper_length_mm'].describe()
a_flipper_desc = adelie['flipper_length_mm'].describe()
c_flipper_desc = chinstrap['flipper_length_mm'].describe()
```


```{python}
# 평균, 최대값, 최소값 추출
mean_val = g_flipper_desc['mean']
max_val = g_flipper_desc['max']
min_val = g_flipper_desc['min']

mean_val_a = a_flipper_desc['mean']
max_val_a = a_flipper_desc['max']
min_val_a = a_flipper_desc['min']

mean_val_c = c_flipper_desc['mean']
max_val_c = c_flipper_desc['max']
min_val_c = c_flipper_desc['min']
```


```{python}
print(f"Gentoo의 flipper_length의 평균: {mean_val}, 최대값: {max_val}, 최소값: {min_val}")
```


```{python}
print(f"Adelie의 flipper_length의 평균: {mean_val_a}, 최대값: {max_val_a}, 최소값: {min_val_a}")
```


```{python}
print(f"Chinstrap의 flipper_length의 평균: {mean_val_c}, 최대값: {max_val_c}, 최소값: {min_val_c}")
```